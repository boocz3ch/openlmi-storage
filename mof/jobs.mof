class LMI_AffectedJobElement : CIM_AffectedJobElement
{
};

class LMI_AssociatedJobMethodResult : CIM_AssociatedJobMethodResult
{
};

class LMI_OwningJobElement : CIM_OwningJobElement
{
};

class LMI_MethodResult : CIM_MethodResult
{
};


class LMI_ConcreteJob : CIM_ConcreteJob
{
    [ Implemented(true) ] boolean DeleteOnCompletion;
    [ Implemented(true) ] uint16 JobState;
    [ Implemented(true) ] string Name;
    [ Implemented(true) ] datetime TimeBeforeRemoval;
    [ Implemented(true) ] datetime TimeOfLastStateChange;
    [ Implemented(true) ] datetime ElapsedTime;
    [ Implemented(true) ] uint16 LocalOrUtcTime;
    [ Implemented(true) ] uint16 PercentComplete;
    [ Implemented(true) ] datetime StartTime;
    [ Implemented(true) ] datetime TimeSubmitted;
    [ Implemented(true) ] uint16 OperationalStatus[];
    
    [ Implemented(true), Deprecated { "CIM_ConcreteJob.GetErrors" }, 
       Description ( 
          "GetError is deprecated because Error should be an "
          "array,not a scalar.\n"
          "When the job is executing or has terminated without "
          "error, then this method returns no CIM_Error instance. "
          "However, if the job has failed because of some internal "
          "problem or because the job has been terminated by a "
          "client, then a CIM_Error instance is returned." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access Denied", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 GetError(
         [OUT, Description ( 
             "If the OperationalStatus on the Job is not \"OK\", "
             "then this method will return a CIM Error instance. "
             "Otherwise, when the Job is \"OK\", null is "
             "returned." ), 
          EmbeddedInstance ( "CIM_Error" )]
      string Error);

    [Implemented(true), Description ( 
          "If JobState is \"Completed\" and Operational Status is "
          "\"Completed\" then no instance of CIM_Error is returned. \n"
          "If JobState is \"Exception\" then GetErrors may return "
          "intances of CIM_Error related to the execution of the "
          "procedure or method invoked by the job.\n"
          "If Operatational Status is not \"OK\" or \"Completed\"then "
          "GetErrors may return CIM_Error instances related to the "
          "running of the job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access Denied", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 GetErrors(
         [OUT, Description ( 
             "If the OperationalStatus on the Job is not \"OK\", "
             "then this method will return one or more CIM Error "
             "instance(s). Otherwise, when the Job is \"OK\", "
             "null is returned." ), 
          EmbeddedInstance ( "CIM_Error" )]
      string Errors[]);

      [Implemented(true), Description ( 
          "Requests that the state of the job be changed to the "
          "value specified in the RequestedState parameter. "
          "Invoking the RequestStateChange method multiple times "
          "could result in earlier requests being overwritten or "
          "lost. \n"
          "If 0 is returned, then the task completed successfully. "
          "Any other return code indicates an error condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", 
          "Can NOT complete within Timeout Period", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Transition Started", 
          "Invalid State Transition", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RequestStateChange(
         [IN, Description ( 
             "RequestStateChange changes the state of a job. The "
             "possible values are as follows: \n"
             "Start (2) changes the state to \'Running\'. \n"
             "Suspend (3) stops the job temporarily. The "
             "intention is to subsequently restart the job with "
             "\'Start\'. It might be possible to enter the "
             "\'Service\' state while suspended. (This is "
             "job-specific.) \n"
             "Terminate (4) stops the job cleanly, saving data, "
             "preserving the state, and shutting down all "
             "underlying processes in an orderly manner. \n"
             "Kill (5) terminates the job immediately with no "
             "requirement to save data or preserve the state. \n"
             "Service (6) puts the job into a vendor-specific "
             "service state. It might be possible to restart the "
             "job." ), 
          ValueMap { "2", "3", "4", "5", "6", "7..32767", 
             "32768..65535" }, 
          Values { "Start", "Suspend", "Terminate", "Kill", 
             "Service", "DMTF Reserved", "Vendor Reserved" }]
      uint16 RequestedState, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client expects the transition to "
             "the new state to take. The interval format must be "
             "used to specify the TimeoutPeriod. A value of 0 or "
             "a null parameter indicates that the client has no "
             "time requirements for the transition. \n"
             "If this property does not contain 0 or null and "
             "the implementation does not support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' must be returned." )]
      datetime TimeoutPeriod);
};

class LMI_StorageJob : LMI_ConcreteJob
{
};

class LMI_StorageMethodResult : LMI_MethodResult
{
};

class LMI_OwningStorageJobElement : LMI_OwningJobElement
{
};


class LMI_AffectedStorageJobElement : LMI_AffectedJobElement
{
};

class LMI_AssociatedStorageJobMethodResult : LMI_AssociatedJobMethodResult
{
};


/*
 Special comment for openlmi-doc-mof2rst to generate documentation of following
 classes:

class CIM_InstMethodCall

*/
